description: |
    <div class="row">
        <h2 class="text-color header">Why?</h2>
    </div>
    <div class="row paragraph">
        <p>
        "To maintain and improve the systems and services that the IT department relies on" is the goal of the Common Platforms team at Chick-fil-A, the team I worked with during my internship and my clients for this project. A major part of their jobs is to monitor the numerous applications and servers that fall under their domain, troubleshooting any issues that arise. However, despite the department already using a monitoring service to watch the status of all their applications, it takes more time than it should for my team to identify which applications they should be looking at from the long list of apps being watched. Moreover, this doesn't help much with identifying the root cause of the issues, as errors from one app could actually be the source of those in another.<br>
        <br>
        In order to simplify this task, my team tasked me with creating a dashboard that would centralize the information that they wanted to know: the status of <i>their</i> applications, as well as how those various systems are connected to one another.
        </p>
    </div>
    <div class="row">
        <h2 class="text-color header">The Process</h2>
    </div>
    <div class="row paragraph">
        <p>
        I began gathering the project requirements by meeting with the team to go in greater detail about what they wanted in the application. Afterwards, I met with each member of the team individually to better understand the specific use cases for the application from their perspectives. From here, I reviewed the findings of my research and narrowed down on how I envisioned the application to function, keeping in mind constraints that were in play, such as the limited amount of time.<br>
        <br>
        Throughout the research process&#8212;and continuing on after&#8212;I tried to sketch out various different ideas for what the interface of the application would look like, which constantly evolved as I further refined the requirements of the application. I knew that I wanted some sort of central page where all the different applications and servers were laid out, and then each application could be viewed individually in order to see the status of it's family tree, which contained individual servers that belonged to the application. Initially, I didn't recognize the need for visualizing the connections between devices, so my initial designs did not incorporate that feature. Below are a few of the ideas I came up with.
        </p>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch1.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch1.png" alt="sketch1" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch2.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch2.png" alt="sketch2" class="image" />
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch3.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch3.png" alt="sketch3" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch4.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch4.png" alt="sketch4" class="image" />
            </a>
        </div>
    </div>
    <div class="row paragraph">
        <p>
        As seen above, most of the ideas followed a general idea of having a list of all the applications on the side of the screen, while detailed information about the app currently being viewed could be seen in the main section of the screen. The pinboard design had a similar concept, in that after clicking on one of the pinned notes with the app's name on it, it would take you to a different pin with more detailed information. However, as I realized my team's desire to see how the applications were connected, I changed course to have the application's main content area contain a graph of the devices instead, with each app being a node and the nodes containing an edge if the apps directly affected one another. If a node on the graph was clicked, it would bring up some sort of popup window that contained more detailed information about the application and its children. Below is how I envisioned this would appear.
        </p>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch5.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch5.png" alt="sketch5" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch6.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch6.png" alt="sketch6" class="image" />
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch7.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch7.png" alt="sketch7" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/sketch8.png" target="_blank">
                <img src="/assets/img/projects/monita/sketch8.png" alt="sketch8" class="image" />
            </a>
        </div>
    </div>
    <div class="row paragraph">
        <p>
        My main difficulty at this stage was picturing how to depict the application's family tree in a way that you could easily the status of its immediate children and parents easily, without having to actually load that relative's information into the window. Most of the initial ideas I had either took up too much space or were difficult to read. Though I never sketched it out formally, I eventually settled on a hamburger menu that would slide out from the side of the popup window that would list out the application's immediate relatives and display their status right next to their names, which can be seen in the wireframe later on.<br>
        <br>
        For the graph itself, I decided to represent each application with a specific symbol to represent the type of system it was, such as a load balancer or device group. Further, the nodes would all have a small icon in the top right corner which would indicate the app's current status, which mapped to the status levels in the IT department's monitoring service. This allowed for the user to see the status of all the applications at a glance, without having to check into each individual device. These icons would also be colored, while the rest of the application would be in grayscale, causing the status of the applications to be even easier for the user to notice.<br>
        <br>
        After running these ideas by my team, I had the general vision for the design of the application in mind and went about making a more concrete mockup of the screens for the application in a wireframe. Unfortunately, due to time constraints and lack of software, I was unable to flesh out nor polish the wireframes as much as I would have liked. However, they got the general idea of the application across, as can be seen below.
        </p>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/wireframe1.png" target="_blank">
                <img src="/assets/img/projects/monita/wireframe1.png" alt="sketch5" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/wireframe2.png" target="_blank">
                <img src="/assets/img/projects/monita/wireframe2.png" alt="sketch6" class="image" />
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/wireframe3.png" target="_blank">
                <img src="/assets/img/projects/monita/wireframe3.png" alt="sketch7" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/wireframe4.png" target="_blank">
                <img src="/assets/img/projects/monita/wireframe4.png" alt="sketch8" class="image" />
            </a>
        </div>
    </div>
    <div class="row">
        <h2 class="text-color header">The Flow</h2>
    </div>
    <div class="row paragraph">
        <p>
        When the user first starts using the application, they are met with the first screen, which contains a graph of all the systems that the application is monitoring, the connections between them, and the status of each application that the nodes represent. Further, a quick navigation bar is located on the left side of the screen, which contains a collapsable list of every application and server being monitored by the web app, allowing the user to quickly navigate an application's family tree and directly view a specific child's information. When either a node on the graph or an item in the quick navigation menu is clicked, it pulls up a modal window as seen in the second window, which contains the application's name, current status, and a list of the currently active alerts for the application, if any. The list of alerts contains relevant information for the user to get an idea of what the problem is, such as the severity of the alert, when the alert was raised, the type of alert, and the value of the alert (if applicable). If the user clicks outside of the window or on the X button in the corner, the modal window is closed.<br>
        <br>
        If the user clicks on the hamburger menu icon in the corner, it pulls out a sliding menu from the side that lists out the application's immediate relatives, if any. The status of each of these relatives is displayed in the menu, allowing the user to pinpoint which children the alerts are propogating from, as well as the overall status of that application group. If any of these relatives are clicked on, the modal window is repopulated with the relative's information and brought back to a similar screen as the previous. The list of relatives can be closed by either clicking on the arrow icon at the top-right of the menu, or by clicking inside of the modal window but outside of the list, which brings the user back to the previous screen which depicts the modal window containing the currently viewed application's active alerts.<br>
        <br>
        Finally, if the user clicks on "See All" above the list of active alerts in the main modal window, the modal is repopulated with a list of the currently viewed application's archived alerts, meaning its non-active alerts. Each alert contains with it the same data that the alerts in the active alert list contained. Further, this list can be filtered by a date range and by severity. This feature was thought to be helpful for scenarios such as when alerts are raised, but then are cleared before the user is able to look into the situation, such as returning to work after the weekend. The hamburger menu slides out the list of immediate relatives from here as well, and the modal window can be closed in similar ways as before. The user can return back to the list of active alerts by clicking on "See Active" at the bottom of the alert table.
        </p>
    </div>
    <div class="row">
        <h2 class="text-color header">Final Screens and Changes</h2>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/main_screen.png" target="_blank">
                <img src="/assets/img/projects/monita/main_screen.png" alt="main_screen1" class="image" />
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/main_screen2.png" target="_blank">
                <img src="/assets/img/projects/monita/main_screen2.png" alt="main_screen2" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/main_screen3.png" target="_blank">
                <img src="/assets/img/projects/monita/main_screen3.png" alt="main_screen3" class="image" />
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/main_screen4.png" target="_blank">
                <img src="/assets/img/projects/monita/main_screen4.png" alt="main_screen4" class="image" />
            </a>
        </div>
        <div class="col-md image-div">
            <a href="/assets/img/projects/monita/main_screen5.png" target="_blank">
                <img src="/assets/img/projects/monita/main_screen5.png" alt="main_screen5" class="image" />
            </a>
        </div>
    </div>
    <div class="row paragraph">
        <p>
        Though most of Monita's overall flow was preserved in the final product, there were some notable changes that were made, mostly either due to better design ideas or time constraints. Right off the bat, the icons representing each node on the graph were changed to only show the status of the individual applications. Because the users of the application will generally not need to know the "type" of each application, those icons were removed in favor of a larger status icon, making it easier to see at a glance the status of all the applications. Moreover, the nodes on the graph now change size depending on the severity of the application's status, growing larger the higher the severity, making the higher priority issues stand out even more. Also, due to the library that was used in drawing the graph, it allowed for extra features such as rearranging how the nodes on the graph are positioned, giving the user some additional freedom in how they view the information. Finally, a menu was added to the top of the application, allowing the user to switch between different sets of applications, initially between production and non-production, but with more able to be added.<br>
        <br>
        Within the modal window, several changes were made as well. First, the application's family tree was changed from being a sliding hamburger menu to a dropdown that appears when you click on the currently viewed application's name. This was mostly done due to limitations with Bootstrap's modals, which was used for much of the front-end development. Further, at the request of my clients, the family tree also provides a link to the application's information in the monitoring software that the IT department uses, and that Monita pulls its data from, in case they would like to see something in greater detail. The same was done to each alert in the alert list, in that clicking on an alert links you to its page in the monitoring application as well. Additionally, the alert list was provided with additional control options such as searching and sorting because of the table layout that was used.<br>
        <br>
        Finally, the alert archive section in the modal window received a few changes. The most major was the removal of filtering options, as though filtering by severity was possible, it was not possible to retrieve alerts from a certain date range through the HTTP requests to the monitoring software. Next, the application's family tree was removed from this section as well, since there wasn't actually that much of a need to directly navigate the family tree in the archive. Finally, due to there potentially being a large number of HTTP requests being made in order to retrieve the archived alert information, an animated loading icon was added before the table is populated.
        </p>
    </div>
    <div class="row">
        <h2 class="text-color header">Final Thoughts</h2>
    </div>
    <div class="row paragraph">
        <p>
        While development and deployment unfortunately prevented me from spending as much time as I would have liked purely on Monita's design, this project was one of the major reasons I switched my goals from becoming a front-end developer into becoming a UI/UX designer. Throughout the project, the short time I spent gathering requirements, sketching out ideas, putting together mockups, and creating the vision for this application was the time that I enjoyed the most. Rather than all the technical details of implementation, I loved the process of shaping what the application would look like, what it would feel like. It also reminded me of the ever iterative process that design is, as even during actual development, the vision for the application constantly evolved. In the end though, the part of the project that makes me happiest is knowing that my work on this project will help my team save some time and make their work a little easier.
        </p>
    </div>
